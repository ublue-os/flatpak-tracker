name: Check Flatpak Runtime Updates

on:
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    # Allow manual triggering

permissions:
  issues: write
  contents: read

jobs:
  check-runtimes:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      
    - name: Set up Python
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Flatpak
      run: |
        sudo apt-get update
        sudo apt-get install -y flatpak
        sudo flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        
    - name: Check flatpak runtime updates
      run: |
        python check_flatpak_runtimes.py --output outdated_packages.json
        
    - name: Display outdated packages summary
      run: |
        if [ -f outdated_packages.json ]; then
          echo "## Outdated Packages Summary"
          echo "Total checked: $(jq -r '.total_checked' outdated_packages.json)"
          echo "Outdated count: $(jq -r '.outdated_count' outdated_packages.json)"
          echo
          if [ "$(jq -r '.outdated_count' outdated_packages.json)" -gt 0 ]; then
            echo "Outdated packages:"
            jq -r '.outdated_packages[] | "- \(.flatpak_id): \(.current_version) â†’ \(.latest_version)"' outdated_packages.json
          else
            echo "No outdated packages found."
          fi
        else
          echo "No outdated packages file generated."
        fi
        
    - name: Create issues for outdated packages
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        if [ -f outdated_packages.json ] && [ "$(jq -r '.outdated_count' outdated_packages.json)" -gt 0 ]; then
          echo "Creating issues for outdated packages..."
          python issue_generator.py outdated_packages.json
        else
          echo "No outdated packages to create issues for."
        fi
        
    - name: Upload outdated packages data
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
      with:
        name: outdated-packages-data
        path: outdated_packages.json
        retention-days: 30
